pipeline {
    agent any
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('AWS-ID')
        AWS_ECR_REPO_NAME = credentials('webapi')
        AWS_DEFAULT_REGION = 'us-west-2'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
    }

    stages {
        stage('Clean WorkSpace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout Git') {
            steps {
                git branch: 'main', url: 'https://github.com/wumine2/wordpress-ecommerce-website'
            }
        }
        
        
        
         stage("Docker Image Build") {
            steps {
                script {
                    dir('Application-Code/webapi') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }
        stage ("Trivy Scan Image"){
            steps {
                sh 'trivy image ${AWS_ECR_REPO_NAME} > trivyimage-webapi-job-${BUILD_NUMBER}-${BUILD_ID}.txt'
            }
        }
        stage("ECR Image Pushing") {
            steps {
                script {
                        sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                        sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                        sh 'docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }


        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "wordpress-ecommerce-website"
                GIT_USER_NAME = "Wumine2"
            }
        steps {
            dir('emart-manifests/webapi') {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "atiwunmi@yahoo.com"
                        git config user.name "wunmi"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        echo $BUILD_NUMBER
                        imageTag=$(grep -oP '(?<=webapi:)[^ ]+' webapi.yaml)
                        echo $imageTag
                        sed -i "s/${AWS_ECR_REPO_NAME}:${imageTag}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}/" webapi.yaml
                        git add webapi.yaml
                        git commit -m "Update deployment Image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }

        }
    }
    post {
    always {
        script {
            emailext attachLog: true,
                subject: "'${currentBuild.result}'",
                body: "Project: ${env.JOB_NAME}<br/>" +
                    "Build Number: ${env.BUILD_NUMBER}<br/>" +
                    "URL: ${env.BUILD_URL}<br/>",
                to: 'wunmijsm@gmail.com',  
                attachmentsPattern: 'trivyfs-webapi-job-*.txt , trivyimage-webapi-job-*.txt'
        }
    }
}

}